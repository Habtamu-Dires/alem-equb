/* tslint:disable */
/* eslint-disable */
/* Code generated by ng-openapi-gen DO NOT EDIT. */

import { HttpClient, HttpContext } from '@angular/common/http';
import { Injectable } from '@angular/core';
import { Observable } from 'rxjs';
import { map } from 'rxjs/operators';

import { BaseService } from '../base-service';
import { ApiConfiguration } from '../api-configuration';
import { StrictHttpResponse } from '../strict-http-response';

import { EkubPaymentStatusResponse } from '../models/ekub-payment-status-response';
import { getEkubPaymentStatus } from '../fn/payments/get-ekub-payment-status';
import { GetEkubPaymentStatus$Params } from '../fn/payments/get-ekub-payment-status';
import { getPaymentsOfCurrentRound } from '../fn/payments/get-payments-of-current-round';
import { GetPaymentsOfCurrentRound$Params } from '../fn/payments/get-payments-of-current-round';
import { getPaymentsOfEkubRound } from '../fn/payments/get-payments-of-ekub-round';
import { GetPaymentsOfEkubRound$Params } from '../fn/payments/get-payments-of-ekub-round';
import { PaymentResponse } from '../models/payment-response';

@Injectable({ providedIn: 'root' })
export class PaymentsService extends BaseService {
  constructor(config: ApiConfiguration, http: HttpClient) {
    super(config, http);
  }

  /** Path part for operation `getPaymentsOfEkubRound()` */
  static readonly GetPaymentsOfEkubRoundPath = '/payments/{ekub-id}/{round-no}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getPaymentsOfEkubRound()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPaymentsOfEkubRound$Response(params?: GetPaymentsOfEkubRound$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<PaymentResponse>>> {
    return getPaymentsOfEkubRound(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getPaymentsOfEkubRound$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPaymentsOfEkubRound(params?: GetPaymentsOfEkubRound$Params, context?: HttpContext): Observable<Array<PaymentResponse>> {
    return this.getPaymentsOfEkubRound$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<PaymentResponse>>): Array<PaymentResponse> => r.body)
    );
  }

  /** Path part for operation `getEkubPaymentStatus()` */
  static readonly GetEkubPaymentStatusPath = '/payments/payment-status/{ekub-id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getEkubPaymentStatus()` instead.
   *
   * This method doesn't expect any request body.
   */
  getEkubPaymentStatus$Response(params: GetEkubPaymentStatus$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<EkubPaymentStatusResponse>>> {
    return getEkubPaymentStatus(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getEkubPaymentStatus$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getEkubPaymentStatus(params: GetEkubPaymentStatus$Params, context?: HttpContext): Observable<Array<EkubPaymentStatusResponse>> {
    return this.getEkubPaymentStatus$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<EkubPaymentStatusResponse>>): Array<EkubPaymentStatusResponse> => r.body)
    );
  }

  /** Path part for operation `getPaymentsOfCurrentRound()` */
  static readonly GetPaymentsOfCurrentRoundPath = '/payments/current-round/{ekub-id}';

  /**
   * This method provides access to the full `HttpResponse`, allowing access to response headers.
   * To access only the response body, use `getPaymentsOfCurrentRound()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPaymentsOfCurrentRound$Response(params?: GetPaymentsOfCurrentRound$Params, context?: HttpContext): Observable<StrictHttpResponse<Array<PaymentResponse>>> {
    return getPaymentsOfCurrentRound(this.http, this.rootUrl, params, context);
  }

  /**
   * This method provides access only to the response body.
   * To access the full response (for headers, for example), `getPaymentsOfCurrentRound$Response()` instead.
   *
   * This method doesn't expect any request body.
   */
  getPaymentsOfCurrentRound(params?: GetPaymentsOfCurrentRound$Params, context?: HttpContext): Observable<Array<PaymentResponse>> {
    return this.getPaymentsOfCurrentRound$Response(params, context).pipe(
      map((r: StrictHttpResponse<Array<PaymentResponse>>): Array<PaymentResponse> => r.body)
    );
  }

}
